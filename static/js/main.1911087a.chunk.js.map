{"version":3,"sources":["redux/actions/types.js","redux/reducers/userReducer.js","redux/reducers/todoReducer.js","redux/reducers/index.js","redux/store.js","components/Util/PageHead.js","components/User/forms/UserForm.js","redux/actions/userActions.js","components/User/CreateUser.js","redux/actions/todoActions.js","components/User/FetchUsers.js","components/User/EditUser.js","components/User/DeleteUser.js","routes/user.js","components/Todo/FetchTodos.js","components/Todo/forms/TodoForm.js","components/Todo/CreateTodo.js","components/Todo/EditTodo.js","components/Todo/DeleteTodo.js","routes/todo.js","routes/index.js","components/Util/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["FETCH_USERS","NEW_USER","EDIT_USER","FETCH_SINGLE_USERS","DELETE_USER","DELETE_TODO","FETCH_TODOS","FETCH_TODOS_BY_USERID","NEW_TODO","EDIT_TODO","initialState","items","combineReducers","users","state","action","type","payload","user","find","id","map","check_user","list_items","filter","obj","todos","new_todo","todo","data","check_todo","middleware","thunk","store","createStore","rootReducer","applyMiddleware","PageHead","title","UserForm","onSubmit","onChange","name","class","value","fetchUsers","dispatch","fetch","then","res","json","CreateUser","props","bind","e","this","setState","target","preventDefault","history","userData","newUser","method","headers","body","JSON","stringify","push","Component","withRouter","connect","fetchTodos","FetchUsers","length","userItems","scope","className","to","EditUser","nextProps","prevState","router","params","match","Number","DeleteUser","exact","path","component","FetchTodos","userid","todoItems","description","getUser","userId","Object","keys","TodoForm","statex","CreateTodo","todoData","console","log","EditTodo","DeleteTodo","NavBar","activeStyle","color","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PACaA,EAAc,cACdC,EAAW,WACXC,EAAY,YACZC,EAAqB,qBACrBC,EAAc,cACdC,EAAc,cAGdC,EAAc,cACdC,EAAwB,wBACxBC,EAAW,WACXC,EAAY,YCVnBC,EAAe,CACjBC,MAAO,ICDX,IAAMD,EAAe,CACjBC,MAAO,ICCIC,kBAAgB,CAC3BC,MFCW,WAA6C,IAA/BC,EAA8B,uDAAtBJ,EAAcK,EAAQ,uCACvD,OAAQA,EAAOC,MACX,KAAKhB,EACD,OAAO,2BACAc,GADP,IAEIH,MAAOI,EAAOE,UAEtB,KAAKhB,EACD,OAAO,2BACAa,GADP,IAEIH,MAAM,CAAEI,EAAOE,SAAV,mBAAsBH,EAAMH,UAEzC,KAAKR,EACD,OAAO,2BACAW,GADP,IAEIH,MAAM,GAAD,mBAAMG,EAAMH,OAAZ,CAAmBI,EAAOE,YAEvC,KAAKf,EACD,IAAMgB,EAAOJ,EAAMH,MAAMQ,MAAK,SAAAD,GAAI,OAAIA,EAAKE,IAAML,EAAOE,QAAQG,MAC5DT,EAAQG,EAAMH,MAQlB,OALIA,EADDO,EACSJ,EAAMH,MAAMU,KAAI,SAAAH,GAAI,OAAIA,EAAKE,IAAML,EAAOE,QAAQG,GAA1B,2BAAmCF,GAASH,EAAOE,SAAWC,KAEzF,sBAAOJ,EAAMH,OAAb,CAAoBI,EAAOE,UAG7B,2BACAH,GADP,IAEIH,UAER,KAAKP,EACD,IAAMkB,EAAaR,EAAMH,MAAMQ,MAAK,SAAAD,GAAI,OAAIA,EAAKE,IAAML,EAAOE,QAAQG,MAClEG,EAAaT,EAAMH,MAQvB,OALIY,EADDD,EACcR,EAAMH,MAAMa,QAAO,SAAAC,GAAG,OAAIA,EAAIL,KAAOL,EAAOE,QAAQG,MAEvD,sBAAON,EAAMH,OAAb,CAAoBI,EAAOE,UAGlC,2BACAH,GADP,IAEIH,MAAQY,IAEhB,QACI,OAAOT,IE9CfY,MDAW,WAA6C,IAA/BZ,EAA8B,uDAAtBJ,EAAcK,EAAQ,uCACvD,OAAOA,EAAOC,MACV,KAAKV,EAKL,KAAKC,EACD,OAAO,2BACAO,GADP,IAEIH,MAAOI,EAAOE,UAEtB,KAAKT,EACD,IAAMmB,EAAWb,EAAMH,MAAMQ,MAAK,SAAAS,GAAI,OAAIA,EAAKR,KAAOL,EAAOE,QAAQG,MAErE,IAAKO,EAAU,CACX,IAAME,EAAI,CAAId,EAAOE,SAAX,mBAAuBH,EAAMH,QAE3C,OAAO,2BACAG,GADP,IAEIH,MAAOkB,IAGf,KAAKpB,EACD,IAAMmB,EAAOd,EAAMH,MAAMQ,MAAK,SAAAS,GAAI,OAAIA,EAAKR,IAAML,EAAOE,QAAQG,MAC5DT,EAAQG,EAAMH,MAQlB,OALIA,EADDiB,EACSd,EAAMH,MAAMU,KAAI,SAAAO,GAAI,OAAIA,EAAKR,IAAML,EAAOE,QAAQG,GAA1B,2BAAmCQ,GAASb,EAAOE,SAAWW,KAEzF,sBAAOd,EAAMH,OAAb,CAAoBI,EAAOE,UAG7B,2BACAH,GADP,IAEIH,MAAOA,IAEf,KAAKN,EACD,IAAMyB,EAAahB,EAAMH,MAAMQ,MAAK,SAAAS,GAAI,OAAIA,EAAKR,IAAML,EAAOE,QAAQG,MAClEG,EAAaT,EAAMH,MAQvB,OALIY,EADDO,EACchB,EAAMH,MAAMa,QAAO,SAAAC,GAAG,OAAIA,EAAIL,KAAOL,EAAOE,QAAQG,MAEvD,sBAAON,EAAMH,OAAb,CAAoBI,EAAOE,UAGlC,2BACAH,GADP,IAEIH,MAAQY,IAEhB,QACI,OAAOT,MEpDbiB,EAAa,CAACC,KAWLC,EATDC,YACVC,EALiB,GAQjBC,IAAe,WAAf,EAAmBL,I,2DCDRM,EATE,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACf,OACI,gCACI,6BAAKA,IACL,2BCUGC,EAdE,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,KACnC,OACI,uBAAMF,SAAUA,EAAhB,UACQ,sBAAKG,MAAM,kBAAX,UACI,uBAAOA,MAAM,OAAb,qBACA,uBAAOA,MAAM,wBAAwB3B,KAAK,OAAO0B,KAAK,OAAOD,SAAUA,EAAUG,MAAOF,OAE5F,qBAAKC,MAAM,iBAAX,SACI,wBAAQA,MAAM,kBAAkB3B,KAAK,SAAS0B,KAAK,SAAnD,0BCRPG,EAAa,kBAAM,SAAAC,GAC5BC,MAAM,kDACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAnC,GAAK,OAAIiC,EAAS,CACpB9B,KAAMhB,EACNiB,QAASJ,SCEXsC,E,kDACF,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAEDtC,MAAQ,CACT4B,KAAM,IAGV,EAAKD,SAAW,EAAKA,SAASY,KAAd,gBAChB,EAAKb,SAAW,EAAKA,SAASa,KAAd,gBARF,E,qDAWTC,GACLC,KAAKC,SAAL,eAAgBF,EAAEG,OAAOf,KAASY,EAAEG,OAAOb,U,+BAGtCU,GACLA,EAAEI,iBAEF,IDRmBC,EAASC,ECQtBC,EAAU,CACZnB,KAAMa,KAAKzC,MAAM4B,MAGrBa,KAAKH,MAAMN,UDZQa,ECYYJ,KAAKH,MAAMO,QDZdC,ECYuBC,EDZV,SAAAf,GAC7CC,MAAM,kDAAmD,CACjDe,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUN,KAExBZ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAA9B,GACF4B,EAAS,CACT9B,KAAMf,EACNgB,QAASC,IAGbyC,EAAQQ,KAAK,a,+BCCb,OACI,gCAAK,uBACD,cAAC,EAAD,CAAU7B,MAAO,gBACjB,cAAC,EAAD,CAAUE,SAAUe,KAAKf,SAAUC,SAAUc,KAAKd,SAAUC,KAAMa,KAAKzC,MAAM4B,c,GA9BpE0B,aAyCVC,cAAWC,YAAQ,KAARA,CAAcnB,IChD3BoB,EAAa,kBAAM,SAAAzB,GAC5BC,MAAM,kDACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAtB,GAAK,OAAIoB,EAAS,CACpB9B,KAAMV,EACNW,QAASS,SCCX8C,E,kLAGMjB,KAAKH,MAAMvC,MAAM4D,QAAU,IAC3BlB,KAAKH,MAAMN,SAASD,KACpBU,KAAKH,MAAMN,SAASyB,Q,+BAMxB,IAAMG,EAAYnB,KAAKH,MAAMvC,MAAMQ,KAAI,SAAAH,GAAI,OACvC,+BACI,oBAAIyD,MAAM,MAAV,SAAiBzD,EAAKwB,OACtB,+BACI,cAAC,IAAD,CAAMkC,UAAU,+BAA+BC,GAAE,qBAAgB3D,EAAKE,IAAtE,kBACA,cAAC,IAAD,CAAMwD,UAAU,8BAA8BC,GAAE,uBAAkB3D,EAAKE,IAAvE,qBACC,cAAC,IAAD,CAAMwD,UAAU,iCAAiCC,GAAE,qBAAgB3D,EAAKE,IAAxE,uBACA,cAAC,IAAD,CAAMwD,UAAU,0BAA0BC,GAAE,yBAAoB3D,EAAKE,IAArE,2BANAF,EAAKE,OAUlB,OACI,gCACI,uBACA,qBAAKuB,MAAM,aAAX,SAAwB,cAAC,IAAD,CAAMiC,UAAU,kBAAkBC,GAAE,eAApC,4BACxB,+CACA,wBAAOlC,MAAM,sBAAb,UACA,gCACI,+BACA,sCACA,8CAGJ,gCACC+B,c,GAnCQN,aAmDVE,eAJS,SAAAxD,GAAK,MAAK,CAC9BD,MAAOC,EAAMD,MAAMF,SAGR2D,CAAyBE,GClDlCM,E,kDACF,WAAY1B,GAAQ,IAAD,8BACf,cAAMA,IAEDtC,MAAQ,CACTD,MAAO,EAAKuC,MAAMvC,MAClB6B,KAAM,EAAKU,MAAMvC,MAAM6B,MAG3B,EAAKD,SAAW,EAAKA,SAASY,KAAd,gBAChB,EAAKb,SAAW,EAAKA,SAASa,KAAd,gBATD,E,gEAyBc,MAAzBE,KAAKH,MAAMvC,MAAM6B,MACjBa,KAAKH,MAAMN,SAASD,O,+BAKnBS,GACLC,KAAKC,SAAL,eAAiBF,EAAEG,OAAOf,KAAOY,EAAEG,OAAOb,U,+BAGrCU,GACLA,EAAEI,iBAEF,IJTiBC,EAASC,EISpB1C,EAAO,CACTE,GAAImC,KAAKH,MAAMvC,MAAMO,GACrBsB,KAAMa,KAAKzC,MAAM4B,MAGrBa,KAAKH,MAAMN,UJdMa,EIcYJ,KAAKH,MAAMO,QJddC,EIcuB1C,EJdV,SAAA4B,GAC3CC,MAAM,mDAAD,OAAoDa,EAASxC,IAAM,CAChE0C,OAAQ,MACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUN,KAExBZ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAA9B,GACF4B,EAAS,CACT9B,KAAMd,EACNe,QAASC,IAEbyC,EAAQQ,KAAK,a,+BIIb,OACI,gCACI,uBACA,cAAC,EAAD,CAAU7B,MAAO,cACjB,cAAC,EAAD,CAAUE,SAAUe,KAAKf,SAAUC,SAAUc,KAAKd,SAAUC,KAAMa,KAAKzC,MAAM4B,a,gDAvCzDqC,EAAWC,GAMvC,GAJ4B,MAAxBD,EAAUlE,MAAM6B,MAChBqC,EAAUjC,SAASD,KAGnBkC,EAAUlE,MAAM6B,OAASsC,EAAUnE,MAAM6B,KACzC,MAAQ,CAAC7B,MAAOkE,EAAUlE,MAAO6B,KAAMqC,EAAUlE,MAAM6B,U,GApB5C0B,aAiERC,cAAWC,aAPF,SAACxD,EAAQmE,GAAY,IAClCC,EAAUD,EAAOE,MAAjBD,OACP,MAAO,CACPrE,MAAOC,EAAMD,MAAMF,MAAMQ,MAAK,SAAAD,GAAI,OAAIA,EAAKE,IAAM8D,EAAO9D,OAAO,GAC/DA,GAAIgE,OAAOF,EAAO9D,OAGIkD,CAAyBQ,ICrE7CO,E,kLLoDoB,IAAC1B,EAASzC,EKlD5BqC,KAAKH,MAAMN,ULkDQa,EKlDYJ,KAAKH,MAAMO,QLkDdzC,EKlDuBqC,KAAKH,MAAMhC,GLkDzB,SAAA0B,GACzCC,MAAM,mDAAD,OAAoD7B,EAAKE,IAAM,CAC5D0C,OAAQ,SACRC,QAAS,CACL,eAAgB,sBAGvBf,MAAK,SAAA5B,GACF0B,EAAS,CACT9B,KAAMZ,EACNa,QAAS,CAACG,GAAGF,EAAKE,MAGtBuC,EAAQQ,KAAK,a,+BK3Db,OACI,+C,GAPaC,aAoBVC,cAAWC,aANF,SAACxD,EAAOmE,GAAY,IAChCC,EAAWD,EAAOE,MAAlBD,OACR,MAAO,CACP9D,GAAI,CAACA,GAAIgE,OAAOF,EAAO9D,QAGDkD,CAAyBe,IChBpC,oBACb,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWhB,IACjC,cAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,eAAeC,UAAWrC,IAC5C,cAAC,IAAD,CAAOmC,OAAK,EAACC,KAAK,iBAAiBC,UAAWV,IAC9C,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,mBAAmBC,UAAWH,QCL9CI,E,kLAGMlC,KAAKH,MAAM1B,MAAM+C,QAAU,GAE3BlB,KAAKH,MAAMN,SAASyB,O,8BAIpBmB,GACJ,IAAI7E,EAAQ0C,KAAKH,MAAMvC,MAAMW,QAAO,SAAAC,GAAG,OAAIA,EAAIL,IAAMsE,KAErD,OAAoB,GAAhB7E,EAAM4D,OACC,GAEJ5D,EAAM,GAAG6B,O,+BAGV,IAAD,OACCiD,EAAYpC,KAAKH,MAAM1B,MAAML,KAAI,SAAAO,GAAI,OACvC,+BACI,oBAAI+C,MAAM,MAAV,SAAiB/C,EAAKgE,cACtB,6BAAK,EAAKC,QAAQjE,EAAKkE,UAEvB,6BAAKlE,EAAKd,QACV,+BACI,cAAC,IAAD,CAAM8D,UAAU,+BAA+BC,GAAE,qBAAgBjD,EAAKR,IAAtE,kBACA,cAAC,IAAD,CAAMwD,UAAU,8BAA8BC,GAAE,uBAAkBjD,EAAKR,IAAvE,yBAPCQ,EAAKR,OAWlB,OACI,gCAAK,uBACD,cAAC,EAAD,CAAUkB,MAAO,kBACjB,wBAAOK,MAAM,sBAAb,UACA,gCACI,+BACA,uCACA,sCACA,2CACA,8CAGJ,gCACCgD,c,GA5CQvB,aAsEVC,cAAWC,aAjBF,SAACxD,EAAQmE,GAAY,IAClCC,EAAUD,EAAOE,MAAjBD,OAEP,OAAmC,IAA/Ba,OAAOC,KAAKd,GAAQT,OACd,CACF/C,MAAOZ,EAAMY,MAAMf,MACnBE,MAAOC,EAAMD,MAAMF,OAIjB,CACFe,MAAOZ,EAAMY,MAAMf,MAAMa,QAAO,SAAAC,GAAG,OAAIA,EAAIqE,QAAUZ,EAAOQ,UAC5D7E,MAAOC,EAAMD,MAAMF,SAKL2D,CAAyBmB,ICpDpCQ,EAzBE,SAAC,GAA+C,IAA9CzD,EAA6C,EAA7CA,SAAUC,EAAmC,EAAnCA,SAAUmD,EAAyB,EAAzBA,YAAaM,EAAY,EAAZA,OAChD,OACI,uBAAM1D,SAAUA,EAAhB,UACY,sBAAKoC,UAAU,UAAf,UACI,mDACA,uBACA,uBAAO5D,KAAK,OAAO0B,KAAK,cAAcD,SAAUA,EAAUG,MAAOgD,OAErE,gCACI,4CAAsB,uBACtB,yBAAQlD,KAAK,SAASD,SAAUA,EAAUG,MAAOsD,EAAjD,UACI,wBAAQtD,MAAM,GAAd,wBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,OAAd,wBAGR,uBACA,qBAAKgC,UAAU,UAAf,SACI,wBAAQ5D,KAAK,SAAS0B,KAAK,SAA3B,0BCXlByD,E,kDACF,WAAY/C,GAAO,IAAD,8BACd,cAAMA,IAEDtC,MAAQ,CACT8E,YAAa,GACbM,OAAQ,IAGZ,EAAKzD,SAAW,EAAKA,SAASY,KAAd,gBAChB,EAAKb,SAAW,EAAKA,SAASa,KAAd,gBATF,E,qDAYTC,GACLC,KAAKC,SAAL,eAAgBF,EAAEG,OAAOf,KAASY,EAAEG,OAAOb,U,+BAGtCU,GACLA,EAAEI,iBAEF,IPTmBC,EAASyC,EOStBxE,EAAO,CACTgE,YAAarC,KAAKzC,MAAM8E,YACxB9E,MAAOyC,KAAKzC,MAAMoF,OAClBJ,OAAQvC,KAAKH,MAAMlC,KAAKE,IAG5BmC,KAAKH,MAAMN,UPfQa,EOeYJ,KAAKH,MAAMO,QPfdyC,EOeuBxE,EPfV,SAAAkB,GAC7CuD,QAAQC,IAAIF,GACZrD,MAAM,iDAAkD,CAChDe,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUkC,KAExBpD,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAApB,GAEFkB,EAAS,CACT9B,KAAMR,EACNS,QAASW,IAET+B,EAAQQ,KAAR,qBAA2BiC,EAASN,iB,+BOGxC,OACI,gCACI,uBACA,cAAC,EAAD,CAAUxD,MAAO,oBACjB,cAAC,EAAD,CAAUE,SAAUe,KAAKf,SAAUC,SAAUc,KAAKd,SAAUmD,YAAarC,KAAKzC,MAAM8E,YAAaM,OAAQ3C,KAAKzC,MAAMoF,gB,GAlC3G9B,aAkDVC,cAAWC,aANF,SAACxD,EAAQmE,GAAY,IACjCC,EAAWD,EAAOE,MAAlBD,OACR,MAAO,CACPhE,KAAM,CAACE,GAAIgE,OAAOF,EAAO9D,QAGHkD,CAAyB6B,IClD7CI,G,kDACF,WAAYnD,GAAO,IAAD,8BACd,cAAMA,IAGDtC,MAAQ,CACT8E,YAAa,EAAKxC,MAAMxB,KAAK,GAAGgE,YAChCM,OAAQ,EAAK9C,MAAMxB,KAAK,GAAGd,OAG/B,EAAK2B,SAAW,EAAKA,SAASY,KAAd,gBAChB,EAAKb,SAAW,EAAKA,SAASa,KAAd,gBAVF,E,qDAcTC,GACLC,KAAKC,SAAL,eAAgBF,EAAEG,OAAOf,KAASY,EAAEG,OAAOb,U,+BAGtCU,GACLA,EAAEI,iBAEF,IRSiBC,EAASyC,EQTpBxE,EAAO,CACTgE,YAAarC,KAAKzC,MAAM8E,YACxB9E,MAAOyC,KAAKzC,MAAMoF,OAClBJ,OAAQvC,KAAKH,MAAMxB,KAAK,GAAGkE,OAC3B1E,GAAImC,KAAKH,MAAMhC,IAGnBmC,KAAKH,MAAMN,UREMa,EQFYJ,KAAKH,MAAMO,QREdyC,EQFuBxE,EREV,SAAAkB,GAC3CC,MAAM,8CAAD,OAA+CqD,EAAShF,IAAM,CAC3D0C,OAAQ,MACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUkC,KAExBpD,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAApB,GACFkB,EAAS,CACT9B,KAAMP,EACNQ,QAASW,IAEb+B,EAAQQ,KAAR,qBAA2BiC,EAASN,iB,+BQZpC,OACI,gCACI,uBACA,cAAC,EAAD,CAAUxD,MAAO,cACjB,cAAC,EAAD,CAAUE,SAAUe,KAAKf,SAAUC,SAAUc,KAAKd,SAAUmD,YAAarC,KAAKzC,MAAM8E,YAAa9E,MAAOyC,KAAKzC,MAAMoF,gB,GArC5G9B,aAqDRC,eAAWC,aANF,SAACxD,EAAQmE,GAAY,IAClCC,EAAUD,EAAOE,MAAjBD,OACV,MAAM,CACHtD,KAAMd,EAAMY,MAAMf,MAAMa,QAAO,SAAAC,GAAG,OAAIA,EAAIL,IAAM8D,EAAO9D,MAAKA,GAAIgE,OAAOF,EAAO9D,OAGxDkD,CAAyBiC,KCzD7CC,G,kLTqDoB,IAAC7C,EAAS/B,ESnD5B2B,KAAKH,MAAMN,UTmDQa,ESnDYJ,KAAKH,MAAMO,QTmDd/B,ESnDuB2B,KAAKH,MAAMxB,KTmDzB,SAAAkB,GACzCC,MAAM,kDAAD,OAAmDnB,EAAK,GAAGR,IAAM,CAC9D0C,OAAQ,SACRC,QAAS,CACL,eAAgB,sBAGvBf,MAAK,SAAA5B,GACF0B,EAAS,CACT9B,KAAMX,EACNY,QAAS,CAACG,GAAGQ,EAAK,GAAGR,MAEzBuC,EAAQQ,KAAR,qBAA2BvC,EAAK,GAAGkE,iB,+BS3DnC,OACI,+C,GAPa1B,aAoBVC,eAAWC,aANF,SAACxD,EAAOmE,GAAY,IAChCC,EAAWD,EAAOE,MAAlBD,OACR,MAAO,CACPtD,KAAMd,EAAMY,MAAMf,MAAMa,QAAO,SAAAC,GAAG,OAAIA,EAAIL,IAAM8D,EAAO9D,SAGjCkD,CAAyBkC,KChBpC,qBACb,eAAC,IAAD,WACE,cAAC,IAAD,CAAOlB,OAAK,EAACC,KAAK,qBAAqBC,UAAWW,IAClD,cAAC,IAAD,CAAOb,OAAK,EAACC,KAAK,qBAAqBC,UAAWC,IAClD,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,mBAAmBC,UAAWgB,KAChD,cAAC,IAAD,CAAOlB,OAAK,EAACC,KAAK,iBAAiBC,UAAWe,KAC9C,cAAC,IAAD,CAAOjB,OAAK,EAACC,KAAK,QAAQC,UAAWC,QCP1B,qBACb,eAAC,IAAD,WACE,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,IAAIC,UAAWtE,IACjC,cAAC,IAAD,CAAOqE,KAAK,QAAQC,UAAWtE,IAC/B,cAAC,IAAD,CAAOqE,KAAK,QAAQC,UAAW5D,SCiBpB6E,G,uKAxBP,OACI,sBAAK7B,UAAU,kEAAf,UACA,cAAC,IAAD,CAASC,GAAG,IAAID,UAAU,eAAeU,OAAK,EAACoB,YAAa,CAAEC,MAAO,SAArE,sBAGA,qBAAK/B,UAAU,2BAA2BxD,GAAG,YAA7C,SACI,qBAAIwD,UAAU,aAAd,UACI,oBAAIA,UAAU,kBAAd,SACI,cAAC,IAAD,CAASC,GAAG,IAAID,UAAU,WAAWU,OAAK,EAACoB,YAAa,CAAEC,MAAO,SAAjE,oBAIJ,oBAAI/B,UAAU,WAAd,SACI,cAAC,IAAD,CAASC,GAAG,QAAQD,UAAU,WAAWU,OAAK,EAACoB,YAAa,CAAEC,MAAO,SAArE,gC,GAfHvC,aCkBNwC,OAbf,WACE,OACE,cAAC,IAAD,CAAU3E,MAAOA,EAAjB,SACE,cAAC,IAAD,UACA,sBAAK2C,UAAU,MAAf,UACE,cAAC,GAAD,IACA,cAAC,GAAD,YCFOiC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/D,MAAK,YAAkD,IAA/CgE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.1911087a.chunk.js","sourcesContent":["//User Types\r\nexport const FETCH_USERS = 'FETCH_USERS'\r\nexport const NEW_USER = 'NEW_USER'\r\nexport const EDIT_USER = 'EDIT_USER'\r\nexport const FETCH_SINGLE_USERS = 'FETCH_SINGLE_USERS'\r\nexport const DELETE_USER = 'DELETE_USER'\r\nexport const DELETE_TODO = 'DELETE_TODO'\r\n\r\n//Todo Types\r\nexport const FETCH_TODOS = 'FETCH_TODOS'\r\nexport const FETCH_TODOS_BY_USERID = 'FETCH_TODOS_BY_USERID'\r\nexport const NEW_TODO = 'NEW_TODO'\r\nexport const EDIT_TODO = 'EDIT_TODO'","import { FETCH_USERS, NEW_USER, EDIT_USER, FETCH_SINGLE_USERS, DELETE_USER } from '../actions/types'\r\n\r\nconst initialState = {\r\n    items: []\r\n}\r\n\r\nexport default function post(state = initialState, action) {\r\n    switch (action.type) {\r\n        case FETCH_USERS:\r\n            return {\r\n                ...state,\r\n                items: action.payload\r\n        }\r\n        case NEW_USER:\r\n            return {\r\n                ...state,\r\n                items: [action.payload, ...state.items]\r\n        }\r\n        case FETCH_SINGLE_USERS:\r\n            return {\r\n                ...state,\r\n                items: [...state.items, action.payload]\r\n        }\r\n        case EDIT_USER:\r\n            const user = state.items.find(user => user.id == action.payload.id);\r\n            let items = state.items;\r\n\r\n            if(user){\r\n                items = state.items.map(user => user.id == action.payload.id ? {...user, ...action.payload} : user)\r\n            }else{\r\n                items = [...state.items, action.payload];\r\n            }\r\n            \r\n            return {\r\n                ...state,\r\n                items\r\n        } \r\n        case DELETE_USER:\r\n            const check_user = state.items.find(user => user.id == action.payload.id);\r\n            let list_items = state.items;\r\n\r\n            if(check_user){\r\n                list_items = state.items.filter(obj => obj.id !== action.payload.id)\r\n            }else{\r\n                list_items = [...state.items, action.payload];\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                items : list_items\r\n        }        \r\n        default:\r\n            return state;\r\n    }\r\n}","import { FETCH_TODOS, FETCH_TODOS_BY_USERID, NEW_TODO, EDIT_TODO, DELETE_TODO } from '../actions/types'\r\n\r\nconst initialState = {\r\n    items: [],\r\n}\r\n\r\nexport default function todo(state = initialState, action) {\r\n    switch(action.type){\r\n        case FETCH_TODOS:\r\n            return {\r\n                ...state,\r\n                items: action.payload\r\n            }  \r\n        case FETCH_TODOS_BY_USERID:\r\n            return {\r\n                ...state,\r\n                items: action.payload\r\n            }\r\n        case NEW_TODO:\r\n            const new_todo = state.items.find(todo => todo.id === action.payload.id);\r\n\r\n            if (!new_todo) {\r\n                const data = [action.payload, ...state.items];\r\n\r\n            return {\r\n                ...state,\r\n                items: data\r\n            }\r\n        }\r\n        case EDIT_TODO:\r\n            const todo = state.items.find(todo => todo.id == action.payload.id);\r\n            let items = state.items;\r\n            \r\n            if(todo){\r\n                items = state.items.map(todo => todo.id == action.payload.id ? {...todo, ...action.payload} : todo)\r\n            }else{\r\n                items = [...state.items, action.payload];\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                items: items\r\n        }\r\n        case DELETE_TODO:\r\n            const check_todo = state.items.find(todo => todo.id == action.payload.id);\r\n            let list_items = state.items;\r\n\r\n            if(check_todo){\r\n                list_items = state.items.filter(obj => obj.id !== action.payload.id)\r\n            }else{\r\n                list_items = [...state.items, action.payload];\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                items : list_items\r\n        }            \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport userReducer  from \"./userReducer\";\r\nimport todoReducer  from \"./todoReducer\";\r\n\r\nexport default combineReducers({\r\n    users: userReducer,\r\n    todos: todoReducer\r\n})","import {createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../redux/reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    //compose(\r\n    applyMiddleware(...middleware)\r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    // )\r\n);\r\n\r\nexport default store;","import React from 'react'\r\n\r\nconst PageHead = ({title}) => {\r\n    return (\r\n        <div>\r\n            <h3>{title}</h3>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageHead\r\n","import React from 'react'\r\n\r\nconst UserForm = ({onSubmit, onChange, name}) => {\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n                <div class=\"form-group row \" >    \r\n                    <label class=\"mr-3\">Name : </label>\r\n                    <input class=\"form-control col-md-4\" type=\"text\" name=\"name\" onChange={onChange} value={name} />\r\n                </div>\r\n                <div class=\"form-group row\">\r\n                    <button class=\"btn btn-primary\" type=\"submit\" name=\"submit\">Submit</button>\r\n                </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default UserForm\r\n\r\n","import { FETCH_USERS, NEW_USER, EDIT_USER, FETCH_SINGLE_USERS, DELETE_USER } from \"./types\";\r\n\r\nexport const fetchUsers = () => dispatch => {\r\n    fetch('https://raphaeltodo.herokuapp.com/api/v1/users')\r\n    .then(res => res.json())\r\n    .then(users => dispatch({\r\n        type: FETCH_USERS,\r\n        payload: users\r\n    }));\r\n}\r\n\r\nexport const fetchSingleUser = (userId) => dispatch => {\r\n    fetch(`https://raphaeltodo.herokuapp.com/api/v1//users/${userId}`)\r\n    .then(res => res.json())\r\n    .then(user => dispatch({\r\n        type: FETCH_SINGLE_USERS,\r\n        payload: user\r\n    }));\r\n}\r\n\r\nexport const createUser = (history, userData) => dispatch => {\r\n    fetch('https://raphaeltodo.herokuapp.com/api/v1//users', {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(userData)\r\n        })\r\n        .then(res => res.json())\r\n        .then(user => {\r\n            dispatch({\r\n            type: NEW_USER,\r\n            payload: user\r\n        })\r\n\r\n        history.push('/')\r\n    });\r\n}\r\n\r\nexport const editUser = (history, userData) => dispatch => {\r\n    fetch(`https://raphaeltodo.herokuapp.com/api/v1//users/${userData.id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(userData)\r\n        })\r\n        .then(res => res.json())\r\n        .then(user =>{\r\n            dispatch({\r\n            type: EDIT_USER,\r\n            payload: user\r\n        })\r\n        history.push('/')\r\n    });\r\n}\r\n\r\nexport const deleteUser = (history, user) => dispatch => {\r\n    fetch(`https://raphaeltodo.herokuapp.com/api/v1//users/${user.id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            }\r\n        })\r\n        .then(id => {\r\n            dispatch({\r\n            type: DELETE_USER,\r\n            payload: {id:user.id}\r\n        })\r\n\r\n        history.push('/')\r\n    });\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport PageHead from \"../Util/PageHead\";\r\nimport UserForm from './forms/UserForm';\r\nimport { createUser } from \"../../redux/actions/userActions\";\r\n\r\n\r\nclass CreateUser extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: \"\",\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({[e.target.name] :  e.target.value})\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const newUser = {\r\n            name: this.state.name,\r\n        }\r\n\r\n        this.props.dispatch(createUser(this.props.history, newUser));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div><br/>\r\n                <PageHead title={\"Create user\"} />\r\n                <UserForm onSubmit={this.onSubmit} onChange={this.onChange} name={this.state.name} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nCreateUser.propTypes = {\r\n    createUser: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withRouter(connect(null)(CreateUser));","import { FETCH_TODOS, FETCH_TODOS_BY_USERID, NEW_TODO, EDIT_TODO, DELETE_TODO} from \"./types\";\r\n\r\nexport const fetchTodos = () => dispatch => {\r\n    fetch('https://raphaeltodo.herokuapp.com/api/v1/todos')\r\n    .then(res => res.json())\r\n    .then(todos => dispatch({\r\n        type: FETCH_TODOS,\r\n        payload: todos\r\n    }));\r\n}\r\n\r\nexport const fetchTodosByUserId = (userId) => dispatch => {\r\n    fetch(`https://raphaeltodo.herokuapp.com/api/v1/todos/${userId}`)\r\n    .then(res => res.json())\r\n    .then(todosUser => dispatch({\r\n        type: FETCH_TODOS_BY_USERID,\r\n        payload: [todosUser]\r\n    }));\r\n}\r\n\r\nexport const createTodo = (history, todoData) => dispatch => {\r\n    console.log(todoData);\r\n    fetch('https://raphaeltodo.herokuapp.com/api/v1/todos', {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(todoData)\r\n        })\r\n        .then(res => res.json())\r\n        .then(todo => \r\n            {\r\n            dispatch({\r\n            type: NEW_TODO,\r\n            payload: todo\r\n            })\r\n            history.push(`/todo/user/${todoData.userId}`)\r\n        });\r\n}\r\n\r\nexport const editTodo = (history, todoData) => dispatch => {\r\n    fetch(`https://jsonplaceholder.typicode.com/todos/${todoData.id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(todoData)\r\n        })\r\n        .then(res => res.json())\r\n        .then(todo => {\r\n            dispatch({\r\n            type: EDIT_TODO,\r\n            payload: todo\r\n        })\r\n        history.push(`/todo/user/${todoData.userId}`)\r\n    });\r\n}\r\n\r\nexport const deleteTodo = (history, todo) => dispatch => {\r\n    fetch(`https://raphaeltodo.herokuapp.com/api/v1/todos/${todo[0].id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            }\r\n        })\r\n        .then(id => {\r\n            dispatch({\r\n            type: DELETE_TODO,\r\n            payload: {id:todo[0].id}\r\n        })\r\n        history.push(`/todo/user/${todo[0].userId}`)\r\n    });\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux';\r\nimport { fetchUsers } from \"../../redux/actions/userActions\";\r\nimport { fetchTodos } from \"../../redux/actions/todoActions\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass FetchUsers extends Component {\r\n    \r\n    componentDidMount() {\r\n        if (this.props.users.length <= 0) {\r\n            this.props.dispatch(fetchUsers());\r\n            this.props.dispatch(fetchTodos());\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const userItems = this.props.users.map(user => (\r\n            <tr key={user.id}>\r\n                <th scope=\"row\">{user.name}</th>\r\n                <td>\r\n                    <Link className=\"btn btn-outline-primary mr-3\" to={`/user/edit/${user.id}`}>Edit</Link>\r\n                    <Link className=\"btn btn-outline-danger mr-3\" to={`/user/delete/${user.id}`}>Delete </Link>\r\n                     <Link className=\"btn btn-outline-secondary mr-3\" to={`/todo/user/${user.id}`}>View Task</Link>\r\n                     <Link className=\"btn btn-outline-success\" to={`/todo/user/add/${user.id}`}>Add Task</Link>\r\n                </td>\r\n            </tr>\r\n        ))\r\n        return (\r\n            <div>\r\n                <br/>\r\n                <div class=\"text-right\"><Link className=\"btn btn-primary\" to={`/user/create`}>Add new user</Link></div>\r\n                <h3>List of Users</h3>\r\n                <table class=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                    <th>Name</th>\r\n                    <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {userItems}\r\n                </tbody>\r\n                </table>                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nFetchUsers.propTypes = {\r\n    fetchUsers: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    users: state.users.items\r\n});\r\n\r\nexport default connect(mapStateToProps)(FetchUsers);","import React, { Component } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux';\r\nimport { fetchUsers, editUser } from \"../../redux/actions/userActions\";\r\nimport PageHead from \"../Util/PageHead\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport UserForm from './forms/UserForm';\r\n\r\n\r\nclass EditUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            users: this.props.users,\r\n            name: this.props.users.name\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n\r\n        if (nextProps.users.name == null) {\r\n            nextProps.dispatch(fetchUsers());\r\n        }\r\n\r\n        if (nextProps.users.name !== prevState.users.name) {\r\n            return ({users: nextProps.users, name: nextProps.users.name }) \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if (this.props.users.name == null) {\r\n            this.props.dispatch(fetchUsers());\r\n        }\r\n        \r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const user = {\r\n            id: this.props.users.id,\r\n            name: this.state.name\r\n        }\r\n\r\n        this.props.dispatch(editUser(this.props.history, user));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br />\r\n                <PageHead title={\"Edit user\"} />\r\n                <UserForm onSubmit={this.onSubmit} onChange={this.onChange} name={this.state.name} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state , router) => {\r\n    const {params} = router.match\r\n    return {\r\n    users: state.users.items.find(user => user.id == params.id) || {},\r\n    id: Number(params.id)\r\n}};\r\n\r\nexport default withRouter(connect(mapStateToProps)(EditUser));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { deleteUser } from \"../../redux/actions/userActions\";\r\n\r\nclass DeleteUser extends Component {\r\n    componentDidMount(){\r\n        this.props.dispatch(deleteUser(this.props.history, this.props.id));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                Deleting\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, router) => {\r\n    const { params } = router.match\r\n    return {\r\n    id: {id: Number(params.id)}\r\n}};\r\n\r\nexport default withRouter(connect(mapStateToProps)(DeleteUser));","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport CreateUser from \"../components/User/CreateUser\";\r\nimport FetchUsers from \"../components/User/FetchUsers\";\r\nimport EditUser from \"../components/User/EditUser\";\r\nimport DeleteUser from \"../components/User/DeleteUser\";\r\n\r\n\r\nexport default () => (\r\n  <Switch>\r\n    <Route exact path=\"/\" component={FetchUsers} />\r\n    <Route exact path=\"/user/create\" component={CreateUser} />\r\n    <Route exact path=\"/user/edit/:id\" component={EditUser} />\r\n    <Route exact path=\"/user/delete/:id\" component={DeleteUser} />\r\n  </Switch>\r\n);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { fetchTodos } from \"../../redux/actions/todoActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport PageHead from \"../Util/PageHead\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nclass FetchTodos extends Component {\r\n\r\n    componentDidMount() {\r\n        if (this.props.todos.length <= 0) {\r\n\r\n            this.props.dispatch(fetchTodos())\r\n        }\r\n    }\r\n\r\n    getUser(userid) {\r\n        let users = this.props.users.filter(obj => obj.id == userid);\r\n\r\n        if (users.length == 0) {\r\n            return \"\";\r\n        }\r\n        return users[0].name;\r\n    }\r\n    \r\n    render() {\r\n        const todoItems = this.props.todos.map(todo => ( \r\n            <tr key={todo.id}>\r\n                <th scope=\"row\">{todo.description}</th>\r\n                <td>{this.getUser(todo.userId)}\r\n                </td>\r\n                <td>{todo.state}</td>\r\n                <td>\r\n                    <Link className=\"btn btn-outline-primary mr-3\" to={`/todo/edit/${todo.id}`}>Edit</Link>\r\n                    <Link className=\"btn btn-outline-danger mr-3\" to={`/todo/delete/${todo.id}`}>Delete</Link>\r\n                </td>\r\n            </tr>\r\n        ))\r\n        return (\r\n            <div><br />\r\n                <PageHead title={\"List of Todos\"} />\r\n                <table class=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                    <th>Title</th>\r\n                    <th>User</th>\r\n                    <th>Completed</th>\r\n                    <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {todoItems}\r\n                </tbody>\r\n                </table>                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state , router) => {\r\n    const {params} = router.match\r\n\r\n    if (Object.keys(params).length === 0) {\r\n        return{\r\n            todos: state.todos.items,\r\n            users: state.users.items\r\n        }\r\n    }\r\n    else{\r\n        return{\r\n            todos: state.todos.items.filter(obj => obj.userId == params.userid),\r\n            users: state.users.items\r\n        }\r\n    }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(FetchTodos));","import React from 'react'\r\n\r\nconst TodoForm = ({onSubmit, onChange, description, statex}) => {\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n                    <div className=\"FormDiv\">\r\n                        <label>Description : </label>\r\n                        <br/>\r\n                        <input type=\"text\" name=\"description\" onChange={onChange} value={description} />\r\n                    </div>\r\n                    <div>\r\n                        <label>State: </label><br />\r\n                        <select name=\"statex\" onChange={onChange} value={statex}>\r\n                            <option value=\"\">Select-one</option>\r\n                            <option value=\"to do\">to do</option>\r\n                            <option value=\"done\">done</option>\r\n                        </select>\r\n                    </div>\r\n                    <br/>\r\n                    <div className=\"FormDiv\">\r\n                        <button type=\"submit\" name=\"submit\">Submit</button>\r\n                    </div>\r\n                    \r\n                </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n","import React, { Component } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux';\r\nimport { createTodo } from \"../../redux/actions/todoActions\";\r\nimport TodoForm from './forms/TodoForm';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport PageHead from \"../Util/PageHead\";\r\n\r\n\r\nclass CreateTodo extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            description: \"\",\r\n            statex: \"\"\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({[e.target.name] :  e.target.value})\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const todo = {\r\n            description: this.state.description,\r\n            state: this.state.statex,\r\n            userId: this.props.user.id\r\n        }\r\n\r\n        this.props.dispatch(createTodo(this.props.history, todo));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br />\r\n                <PageHead title={\"Create new Todo\"} />\r\n                <TodoForm onSubmit={this.onSubmit} onChange={this.onChange} description={this.state.description} statex={this.state.statex}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCreateTodo.propTypes = {\r\n    createTodo: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state , router) => {\r\n    const { params } = router.match\r\n    return {\r\n    user: {id: Number(params.id)}\r\n}};\r\n\r\nexport default withRouter(connect(mapStateToProps)(CreateTodo));","import React, { Component } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux';\r\nimport { editTodo } from \"../../redux/actions/todoActions\";\r\nimport TodoForm from './forms/TodoForm';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport PageHead from \"../Util/PageHead\";\r\n\r\n\r\nclass EditTodo extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        \r\n        this.state = {\r\n            description: this.props.todo[0].description,\r\n            statex: this.props.todo[0].state\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({[e.target.name] :  e.target.value})\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const todo = {\r\n            description: this.state.description,\r\n            state: this.state.statex,\r\n            userId: this.props.todo[0].userId,\r\n            id: this.props.id\r\n        }\r\n\r\n        this.props.dispatch(editTodo(this.props.history, todo));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br />\r\n                <PageHead title={\"Edit Todo\"} />\r\n                <TodoForm onSubmit={this.onSubmit} onChange={this.onChange} description={this.state.description} state={this.state.statex}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nEditTodo.propTypes = {\r\n    editTodo: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state , router) => {\r\n    const {params} = router.match\r\n return{\r\n    todo: state.todos.items.filter(obj => obj.id == params.id), id: Number(params.id)\r\n}};\r\n\r\nexport default withRouter(connect(mapStateToProps)(EditTodo));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { deleteTodo } from \"../../redux/actions/todoActions\";\r\n\r\nclass DeleteTodo extends Component {\r\n    componentDidMount(){\r\n        this.props.dispatch(deleteTodo(this.props.history, this.props.todo));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                Deleting\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, router) => {\r\n    const { params } = router.match\r\n    return {\r\n    todo: state.todos.items.filter(obj => obj.id == params.id)\r\n}};\r\n\r\nexport default withRouter(connect(mapStateToProps)(DeleteTodo));","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport FetchTodos from \"../components/Todo/FetchTodos\";\r\nimport CreateTodo from \"../components/Todo/CreateTodo\";\r\nimport EditTodo from \"../components/Todo/EditTodo\";\r\nimport DeleteTodo from \"../components/Todo/DeleteTodo\";\r\n\r\n\r\nexport default () => (\r\n  <Switch>\r\n    <Route exact path=\"/todo/user/add/:id\" component={CreateTodo} />\r\n    <Route exact path=\"/todo/user/:userid\" component={FetchTodos} />\r\n    <Route exact path=\"/todo/delete/:id\" component={DeleteTodo} />\r\n    <Route exact path=\"/todo/edit/:id\" component={EditTodo} />\r\n    <Route exact path=\"/todo\" component={FetchTodos} />\r\n  </Switch>\r\n);","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport user from \"./user\";\r\nimport todo from \"./todo\";\r\n\r\n\r\n\r\nexport default () => (\r\n  <Switch>\r\n    <Route exact path=\"/\" component={user} />\r\n    <Route path=\"/user\" component={user} />\r\n    <Route path=\"/todo\" component={todo} />\r\n  </Switch>\r\n);","import { NavLink } from \"react-router-dom\";  \r\nimport React, { Component } from 'react'\r\n\r\nclass NavBar extends Component {\r\n    render() { \r\n        return( \r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light navbar-static-top\" >  \r\n            <NavLink to=\"/\" className=\"navbar-brand\" exact activeStyle={{ color: \"black\" }}>  \r\n                Todo App\r\n            </NavLink>  \r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">  \r\n                <ul className=\"navbar-nav\">  \r\n                    <li className=\"nav-item active\">  \r\n                        <NavLink to=\"/\" className=\"nav-link\" exact activeStyle={{ color: \"black\" }}>  \r\n                            User  \r\n                        </NavLink>  \r\n                    </li>  \r\n                    <li className=\"nav-item\">  \r\n                        <NavLink to=\"/todo\" className=\"nav-link\" exact activeStyle={{ color: \"black\" }}>  \r\n                            Todo  \r\n                        </NavLink>  \r\n                    </li>\r\n                </ul>  \r\n            </div>  \r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar;","import './App.css';\nimport { Provider } from 'react-redux'\nimport store from \"./redux/store\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Routes from \"./routes\";\nimport NavBar from \"./components/Util/NavBar\";\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n      <div className=\"App\">\n        <NavBar />\n        <Routes />\n      </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}